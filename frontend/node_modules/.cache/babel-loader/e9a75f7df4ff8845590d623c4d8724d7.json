{"remainingRequest":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/babel-loader/lib/index.js!/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/src/components/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/src/components/ResetPassword.vue","mtime":1569049469000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Modal from \"./Modal\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport moment from 'moment';\nimport { validEmail } from \"../assets/js/utils.js\";\nimport { URL, LOGIN_PATH } from \"../constants/constants\";\nexport default {\n  name: 'ResetPassword',\n  components: {\n    Modal: Modal,\n    Loading: Loading,\n    Error: Error\n  },\n  data: function data() {\n    return {\n      submitted: false,\n      error: {\n        message: null\n      },\n      email: null,\n      newPass: null,\n      cfPass: null,\n      LOGIN_PATH: LOGIN_PATH\n    };\n  },\n  methods: {\n    handleSave: function handleSave() {\n      var _this = this;\n\n      // Flag submitted\n      this.submitted = true; // Check empty input\n\n      if (this.email && this.newPass && this.cfPass) {\n        // Check validation of the email\n        if (!validEmail(this.email)) {\n          this.error.message = \"Email is invalid\";\n          return false;\n        } // Show loading\n\n\n        this.$refs.loading.handleLoading();\n        setTimeout(function () {\n          // Get the list of user\n          axios.get(URL + '/users').then(function (resp) {\n            // Get the list of users\n            var list = resp.data; // Find the user with email\n\n            var user = list.find(function (x) {\n              return x.email == _this.email;\n            }); // Check the user exist\n\n            if (user != null) {\n              // Check the confirm password and new password must be the same\n              if (_this.cfPass == _this.newPass) {\n                // Set new password\n                user.password = _this.cfPass; // Change password\n\n                axios.put(URL + '/users/' + user.id, user).then(function (resp) {\n                  _this.error.message = null;\n                  _this.loading = false;\n                  _this.email = null;\n                  _this.newPass = null, _this.cfPass = null, _this.submitted = false; // Hide loading\n\n                  _this.$refs.loading.handleLoading(); // Open message box\n\n\n                  _this.$refs.modal.handleModal(); // Redirect to home page\n\n\n                  setTimeout(function () {\n                    _this.$refs.modal.handleModal();\n\n                    window.location = LOGIN_PATH;\n                  }, 3000);\n                }).catch(function (error) {\n                  // Catch error here\n                  _this.error = error; // Hide loading\n\n                  _this.$refs.loading.handleLoading();\n                });\n              } else {\n                _this.error.message = \"Confirm password is incorrect\"; // Hide loading\n\n                _this.$refs.loading.handleLoading();\n              }\n            } else {\n              _this.error.message = \"Email doesn't exist\"; // Hide loading\n\n              _this.$refs.loading.handleLoading();\n            }\n          }).catch(function (error) {\n            // Catch error here\n            _this.error = error; // Hide loading\n\n            _this.$refs.loading.handleLoading();\n          });\n        }, 500);\n      }\n    },\n    handleChange: function handleChange() {\n      this.error.message = null;\n    }\n  }\n};",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"container\">\n    <div class=\"login\">\n      <h2>New Password</h2>\n      <br/>\n      <form @submit.prevent=\"handleSave\">\n        <div class=\"div-responsive\">\n          <label for=\"email\">Email:</label>\n          <input type=\"text\" v-model=\"email\" @change=\"handleChange\" placeholder=\"Email\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !email }\" />\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !email\" class=\"invalid-feedback\">Email is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <label for=\"newPass\">New password:</label>\n          <input type=\"password\" v-model=\"newPass\" placeholder=\"Enter new password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !newPass }\" />\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !newPass\" class=\"invalid-feedback\">New password is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <label for=\"cfPass\">Password:</label>\n          <input type=\"password\" v-model=\"cfPass\" @change=\"handleChange\" placeholder=\"Confirn your new password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !cfPass }\">\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !cfPass\" class=\"invalid-feedback\">Confirn password is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <router-link :to=\"LOGIN_PATH\" class=\"customLink\">Sign In</router-link>\n        </div>\n        <div class=\"alert-box div-responsive\">\n          <Error v-if=\"error.message!=null\" v-bind:message=\"error.message\" />\n        </div>\n        <div class=\"div-responsive btn-center\">\n          <button type=\"submit\" class=\"btn btn-secondary btn-big\">Save</button>\n        </div>\n      </form>\n    </div>\n    <Modal ref=\"modal\" message=\"Your password is reset\" :redirect=\"LOGIN_PATH\" />\n    <Loading ref=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Modal from './Modal'\nimport Loading from './Loading'\nimport Error from './Error'\nimport moment from 'moment'\nimport { validEmail } from '../assets/js/utils.js'\nimport { URL, LOGIN_PATH } from '../constants/constants'\n\nexport default {\n  name: 'ResetPassword',\n  components: {\n      Modal,\n      Loading,\n      Error\n  },\n  data () {\n    return {\n      submitted: false,\n      error: {\n        message : null\n      },\n      email: null,\n      newPass: null,\n      cfPass: null,\n      LOGIN_PATH: LOGIN_PATH\n    }\n  },\n  methods: {\n    handleSave () {\n      // Flag submitted\n      this.submitted = true;\n\n      // Check empty input\n      if(this.email && this.newPass && this.cfPass) {\n        // Check validation of the email\n        if(!validEmail(this.email)) {\n          this.error.message = \"Email is invalid\";\n          return false;\n        }\n        // Show loading\n        this.$refs.loading.handleLoading();\n\n        setTimeout(() => {\n          // Get the list of user\n          axios.get(URL + '/users')\n          .then(resp => {\n              // Get the list of users\n              const list = resp.data;\n              // Find the user with email\n              const user = list.find(x => x.email == this.email);\n              // Check the user exist\n              if(user != null) {\n                // Check the confirm password and new password must be the same\n                if(this.cfPass == this.newPass) {\n                  // Set new password\n                  user.password = this.cfPass;\n                  // Change password\n                  axios.put(URL + '/users/' + user.id, user)\n                  .then(resp => {\n                      this.error.message = null;\n                      this.loading = false;\n                      this.email = null;\n                      this.newPass = null,\n                      this.cfPass = null,\n                      this.submitted = false;\n\n                      // Hide loading\n                      this.$refs.loading.handleLoading();\n                      // Open message box\n                      this.$refs.modal.handleModal();\n\n                      // Redirect to home page\n                      setTimeout(() => {\n                          this.$refs.modal.handleModal();\n                          window.location = LOGIN_PATH;\n                      }, 3000);\n                  }).catch(error => {\n                      // Catch error here\n                      this.error = error;\n                      // Hide loading\n                      this.$refs.loading.handleLoading();\n                  });\n                } else {\n                  this.error.message = \"Confirm password is incorrect\";\n                  // Hide loading\n                  this.$refs.loading.handleLoading();\n                }\n              } else {\n                this.error.message = \"Email doesn't exist\";\n                // Hide loading\n                this.$refs.loading.handleLoading();\n              }\n          }).catch(error => {\n              // Catch error here\n              this.error = error;\n              // Hide loading\n              this.$refs.loading.handleLoading();\n          });\n        }, 500);\n      }\n    },\n    handleChange () {\n      this.error.message = null;\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}