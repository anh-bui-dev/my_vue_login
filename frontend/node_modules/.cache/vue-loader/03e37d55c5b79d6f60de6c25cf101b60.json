{"remainingRequest":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/src/components/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/src/components/ResetPassword.vue","mtime":1568970007000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jimmybui/Documents/Web&App/example/my_vue_login/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport Modal from './Modal'\nimport Loading from './Loading'\nimport Error from './Error'\nimport { validEmail } from '../assets/js/utils.js'\n\nconst url = 'http://localhost:4081'\n\nexport default {\n  name: 'ResetPassword',\n  components: {\n      Modal,\n      Loading,\n      Error\n  },\n  data () {\n    return {\n      submitted: false,\n      loading: false,\n      error: {\n        message : null\n      },\n      email: null,\n      newPass: null,\n      cfPass: null\n    }\n  },\n  methods: {\n    handleSave () {\n      // Flag submitted\n      this.submitted = true;\n\n      // Check empty input\n      if(this.email && this.newPass && this.cfPass) {\n        // Check validation of the email\n        if(!validEmail(this.email)) {\n          this.error.message = \"Email is invalid\";\n          return false;\n        }\n        this.loading = true;\n\n        setTimeout(() => {\n          // Get the list of user\n          axios.get(url + '/users')\n          .then(resp => {\n              // Get the list of users\n              const list = resp.data;\n              // Find the user with email\n              const user = list.find(x => x.email == this.email);\n              // Check the user exist\n              if(user != null) {\n                // Check the confirm password and new password must be the same\n                if(this.cfPass == this.newPass) {\n                  // Set new password\n                  user.password = this.cfPass;\n                  // Change password\n                  axios.put(url + '/users/' + user.id, user)\n                  .then(resp => {\n                      this.error.message = null;\n                      this.loading = false;\n                      this.email = null;\n                      this.newPass = null,\n                      this.cfPass = null,\n                      this.submitted = false;\n                      // Open message box\n                      this.$refs.modal.show();\n                  }).catch(error => {\n                      // Catch error here\n                      this.error = error;\n                      this.loading = false;\n                  });\n                } else {\n                  this.error.message = \"Confirm password is incorrect\";\n                  this.loading = false;\n                }\n              } else {\n                this.error.message = \"Email doesn't exist\";\n                this.loading = false;\n              }\n          }).catch(error => {\n              // Catch error here\n              this.error = error;\n              this.loading = false;\n          });\n        }, 500);\n      }\n    },\n    handleChange () {\n      this.error.message = null;\n    }\n  }\n}\n",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPassword.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"container\">\n    <div id=\"login\">\n      <h1>New Password</h1>\n      <br/>\n      <form @submit.prevent=\"handleSave\">\n        <div class=\"div-responsive\">\n          <label for=\"email\">Email:</label>\n          <input type=\"text\" v-model=\"email\" @change=\"handleChange\" placeholder=\"Email\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !email }\" />\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !email\" class=\"invalid-feedback\">Email is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <label for=\"newPass\">New password:</label>\n          <input type=\"password\" v-model=\"newPass\" placeholder=\"Enter new password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !newPass }\" />\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !newPass\" class=\"invalid-feedback\">New password is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <label for=\"cfPass\">Password:</label>\n          <input type=\"password\" v-model=\"cfPass\" @change=\"handleChange\" placeholder=\"Confirn your new password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && !cfPass }\">\n          <div class=\"alert-field\">\n            <div v-if=\"submitted && !cfPass\" class=\"invalid-feedback\">Confirn password is required</div>\n          </div>\n        </div>\n        <div class=\"div-responsive\">\n          <a href=\"login\" class=\"customLink\">Sign In</a>\n        </div>\n        <div class=\"alert-box div-responsive\">\n          <Error v-if=\"error.message!=null\" v-bind:message=\"error.message\" />\n        </div>\n        <div class=\"div-responsive\">\n          <button type=\"submit\" class=\"btn btn-secondary btn-big\">Save</button>\n        </div>\n      </form>\n    </div>\n    <Modal ref=\"modal\" message=\"Your password is reset\" />\n    <Loading v-if=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Modal from './Modal'\nimport Loading from './Loading'\nimport Error from './Error'\nimport { validEmail } from '../assets/js/utils.js'\n\nconst url = 'http://localhost:4081'\n\nexport default {\n  name: 'ResetPassword',\n  components: {\n      Modal,\n      Loading,\n      Error\n  },\n  data () {\n    return {\n      submitted: false,\n      loading: false,\n      error: {\n        message : null\n      },\n      email: null,\n      newPass: null,\n      cfPass: null\n    }\n  },\n  methods: {\n    handleSave () {\n      // Flag submitted\n      this.submitted = true;\n\n      // Check empty input\n      if(this.email && this.newPass && this.cfPass) {\n        // Check validation of the email\n        if(!validEmail(this.email)) {\n          this.error.message = \"Email is invalid\";\n          return false;\n        }\n        this.loading = true;\n\n        setTimeout(() => {\n          // Get the list of user\n          axios.get(url + '/users')\n          .then(resp => {\n              // Get the list of users\n              const list = resp.data;\n              // Find the user with email\n              const user = list.find(x => x.email == this.email);\n              // Check the user exist\n              if(user != null) {\n                // Check the confirm password and new password must be the same\n                if(this.cfPass == this.newPass) {\n                  // Set new password\n                  user.password = this.cfPass;\n                  // Change password\n                  axios.put(url + '/users/' + user.id, user)\n                  .then(resp => {\n                      this.error.message = null;\n                      this.loading = false;\n                      this.email = null;\n                      this.newPass = null,\n                      this.cfPass = null,\n                      this.submitted = false;\n                      // Open message box\n                      this.$refs.modal.show();\n                  }).catch(error => {\n                      // Catch error here\n                      this.error = error;\n                      this.loading = false;\n                  });\n                } else {\n                  this.error.message = \"Confirm password is incorrect\";\n                  this.loading = false;\n                }\n              } else {\n                this.error.message = \"Email doesn't exist\";\n                this.loading = false;\n              }\n          }).catch(error => {\n              // Catch error here\n              this.error = error;\n              this.loading = false;\n          });\n        }, 500);\n      }\n    },\n    handleChange () {\n      this.error.message = null;\n    }\n  }\n}\n</script>\n"]}]}